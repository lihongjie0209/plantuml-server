version: '3.8'

services:
  plantuml-server:
    build: .
    container_name: plantuml-server
    ports:
      - "9090:9090"
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - QUARKUS_HTTP_HOST=0.0.0.0
      - QUARKUS_HTTP_PORT=9090
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/api/plantuml/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.example.service=plantuml-server"
      - "com.example.version=1.0.0"
    networks:
      - plantuml-network

  # MCP Server - for AI agent integration
  mcp-server:
    build:
      context: ./mcp
      dockerfile: Dockerfile
    container_name: plantuml-mcp-server
    environment:
      - PLANTUML_SERVER_URL=http://plantuml-server:9090
      - NODE_ENV=production
      - MCP_SERVER_NAME=plantuml-mcp
    depends_on:
      plantuml-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "dist/index.js", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "com.example.service=mcp-server"
      - "com.example.version=0.3.2"
    networks:
      - plantuml-network
    volumes:
      # Mount for MCP stdio communication (if needed)
      - mcp-data:/app/data
      # Optional: mount for sharing diagrams
      - ./shared-diagrams:/app/shared
    stdin_open: true
    tty: true

networks:
  plantuml-network:
    driver: bridge
    labels:
      - "com.example.network=plantuml"

volumes:
  mcp-data:
    driver: local
    labels:
      - "com.example.volume=mcp-data"
